srs=iquery("eo_getsrs(test_chicago_sts)",return=TRUE)
srs
test@name
class(test)
srs$A
strsplit(srs$A,"(?P<key>[\w]*)=(?P<value>[\d]*)[\s]?")
strsplit(srs$A,"(?P<key>[\\w]*)=(?P<value>[\\d]*)[\\s]?")
strsplit(srs$A,"([\\w]*)=([\\d]*)[\\s]?")
strsplit(srs$A,"([\\w]*)=([\\d]*)[\\s]")
strsplit(srs$A,"([\\w]*)=([\\d]*))
""
""
strsplit(srs$A,"([\\w]*)=([\\d]*)")
strsplit(srs$A,"([\\w]*)=([\\d]*) ")
strsplit(srs$A,"([\\w]*)=([\\d]*)[ ]?")
strsplit(srs$A,"([\\w]*)=([\\d]*)[\\s]")
strsplit(srs$A,"[\\s]?([\\w]*)=([\\d]*)[\\s]?")
strsplit(srs$A,"([\\w-\\s]*)=([\\d-\\s]*)[\\s]?")
strsplit(srs$A,"([\\w -\\s]*)=([\\d -\\s]*)[\\s]?")
srs$A
strsplit(srs$A,"=([\\d]*)[\\s]?")
strsplit(srs$A,"=[\\w]*([\\d]*)[\\s]?")
strsplit(srs$A,"[\\w]*=([\\d]*)[\\s]?")
strsplit(srs$A,"^([\\w]*)=([\\d]*)[\\s]?$")
strsplit(srs$A,"([\\w]*)=([\\d]*)[\\s]?")
strsplit(srs$A,"([\\S]*)=([\\d]*)[\\s]?")
strsplit(srs$A,"([\\S]*)=([\\d\\S]*)[\\s]?")
strsplit(srs$A,"([\\S]*)=([\\d\\S]*)")
strsplit(srs$A,"=([\\d\\S]*)")
strsplit(srs$A,"=\\s")
strsplit(srs$A,"=")
strsplit(srs$A,"= \s")
strsplit(srs$A,"= \\s")
strsplit(srs$A,"\\S")
strsplit(srs$A,"\\s")
strsplit(srs$A,"(\\w*)=(\\d*)\\s")
strsplit(srs$A,"(\\w*)=(\\d*)")
strsplit(srs$A,"(\\w*)=(\\d*)")
strsplit(srs$A,"(\\w*)=(\\d*)\\s")
strsplit(srs$A,"(\\w*)=(\\d*)\\S")
strsplit(srs$A,"(\\w*)=(\\d*)")
strsplit(srs$A,"(\\w*)=(\\d*)\\s")
strsplit(srs$A,"= \s")
strsplit(srs$A,"= \\s")
strsplit(srs$A,"\\s")
strsplit(srs$A,"\\s")[[1]]
strsplit(strsplit(srs$A,"\\s")[[1]],"=")[[1]]
strsplit(strsplit(srs$A,"\\s")[[1]],"=")
as.data.frame(strsplit(strsplit(srs$A,"\\s")[[1]],"="))
as.data.frame(strsplit(strsplit(srs$A,"\\s")[[1]],"="))[2,]
as.matrix(as.data.frame(strsplit(strsplit(srs$A,"\\s")[[1]],"="))[2,])
as.matrix(as.numeric(as.data.frame(strsplit(strsplit(srs$A,"\\s")[[1]],"="))[2,]))
as.matrix(as.data.frame(strsplit(strsplit(srs$A,"\\s")[[1]],"="))[2,])
as.numeric(as.matrix(as.data.frame(strsplit(strsplit(srs$A,"\\s")[[1]],"="))[2,]))
as.numeric(as.matrix(strsplit(strsplit(srs$A,"\\s")[[1]],"=")[2,]))
as.numeric(as.matrix(as.data.frame(strsplit(strsplit(srs$A,"\\s")[[1]],"="))[2,]))
m = matrix(ncol=3,nrow=2)
z = as.numeric(as.matrix(as.data.frame(strsplit(strsplit(srs$A,"\\s")[[1]],"="))[2,]))
m[,1] = z[1:2]
m
m[,1] = z[c(3,5)]
m
srs
Extent()
extend()
extend(10,20,0,10)
library(raster)
extend(10,20,0,10)
extend(c(10,20,0,10))
extent(10,20,0,10)
class(extent(10,20,0,10))
library(STRasterSciDB)
test
class(test)
test@affine
test@CRS
library(STRasterSciDB)
getSlots(test)
getSlots(class(test)
)
test@name
library(STRasterSciDB)
test
test@CRS
test@extent
test@affine
test@affine
library(STRasterSciDB)
library(STRasterSciDB)
test@affine
library(STRasterSciDB)
slot(test,"CRS")
slot(test,"name")
library(STRasterSciDB)
test@CRS
image(test)
library(STRasterSciDB)
ls()
class(test)
slotNames(test)
test@CRS
test$affine
is(test,"scidb")
is(test,"scidbst")
is(test,"raster")
library(STRasterSciDB)
library(STRasterSciDB)
library(STRasterSciDB)
test@affine
library(STRasterSciDB)
test
test@scidb
library(STRasterSciDB)
test@affine
rm(test)
ls()
rm(m,srs,z)
ls
ls()
test= stdb("test_chicago_sts")
scidbconnect(host="gis-bigdata.uni-muenster.de",port=32321,user="f_lahn01",password="2v4rmvze65q9rwje8b2pcbzk",protocol="https")
test= stdb("test_chicago_sts")
test@affine
show(test)
test@name
slotNames(sp)
slotNames(SpatialPixels())
slotNames("SpatialPixels")
slotNames("raster")
slotNames("RasterBrick")
slotNames("RasterLayer")
rm(test)
library(STRasterSciDB)
library(STRasterSciDB)
rm(test)
scidbconnect(host="gis-bigdata.uni-muenster.de",port=32321,user="f_lahn01",password="2v4rmvze65q9rwje8b2pcbzk",protocol="https")
test= stdb("test_chicago_sts")
class(test)
names(test)
slots(test)
slotNames(test)
test@dimensions
test@attributes
rm(test)
library(STRasterSciDB)
scidbconnect(host="gis-bigdata.uni-muenster.de",port=32321,user="f_lahn01",password="2v4rmvze65q9rwje8b2pcbzk",protocol="https")
test= stdb("test_chicago_sts")
slotNames(test)
crs(test)
extent(test)
test@crs
test@schema
iquery(paste("eo_getsrs(",test@name,")"),sep="",return=TRUE)
iquery(paste("eo_getsrs(",test@name,")",sep=""),return=TRUE)
CRS("+proj=utm +zone=16 +datum=NAD27 +units=m +no_defs")
test@schema
INF
Inf
?Inf
strsplit(test.schema,"<(\w)=(\w),?>")
strsplit(test.schema,"<(\\w)=(\\w),?>")
strsplit(test@schema,"<(\\w)=(\\w),?>")
strsplit(test@schema,"<(\\w):(\\w),?>")
strsplit(test@schema,"<(\\w):(\\w)[,]?>")
strsplit(test@schema,"<(\\w):(\\w)>")
strsplit(test@schema,"<(\\w*):(\\w*),?>")
strsplit(test@schema,"<(\\w*):(\\w*)[,]?>")
strsplit(test@schema,"<(\\w*):(\\w*)[,]?> ")
strsplit(test@schema,"<([\\w]*):([\\w]*)[,]?> ")
strsplit(test@schema,"<([\\w]*):([\\w]*)[,]?>")
strsplit(test@schema,"<[\\w]*:[\\w]*[,]?>")
strsplit(test@schema,"<.*>")
strsplit(test@schema,"<\\.*>")
strsplit(test@schema,"<\\:*>")
strsplit(test@schema,"<([\\w]+):([\\w]+)[,]?>")
strsplit(test@schema,"^<([\\w]+):([\\w]+)[,]?>")
strsplit(test@schema,"(<([\\w]+):([\\w]+)[,]?>)")
strsplit(test@schema,"(<([\\w]+):([\\w]+)[,]?>) (\\[[\\w]*\\])")
regmatches(test@schema,"(<([\\w]+):([\\w]+)[,]?>) (\\[[\\w]*\\])")
regmatches(test@schema,"(<[\\w]+):([\\w]+)[,]?>")
gsub(test@schema, "<(\\w*)>")
?gsub
grep(x=test@schema, pattern="<(\\w*)>")
regexpr(text=test@schema, pattern="<(\\w*)>")
gregexpr(text=test@schema, pattern="<(\\w*)>")
gregexpr(text=test@schema, pattern="<([\\w]*)>")
strsplit(test@schema,"> ")
strsplit(test@schema," ")
strsplit(test@schema,"< >")[[1]]
strsplit(test@schema,"[<,>, ]")[[1]]
strsplit(test@schema,"[<,> ]")[[1]]
strsplit(test@schema,"[<,>\\s]")[[1]]
strsplit(test@schema,"[<>]")[[1]]
strsplit(test@schema,"[<>\\s]")[[1]]
strsplit(test@schema,"^[<>\\s]")[[1]]
strsplit(test@schema,"[<>\\s]")[[1]]
trim(strsplit(test@schema,"[<>\\s]")[[1]])
trim(strsplit(trim(test@schema),"[<>\\s]")[[1]])
strsplit(trim(test@schema),"[<>\\s]")[[1]]
strsplit(trim(test@schema),"[<>\\s]")
strsplit(trim(test@schema),"[<>\\s]")[[1]]
sub(trim(test@schema),"<[\\w]*>]")
sub("<[\\w]*>]",test@schema)
regexec("<[\\w]*>",test@schema)
regexec("<([\\w]*)>",test@schema)
grep("<([\\w]*)>",test@schema)
grep("<([\\w]*)>",test@schema,value=T)
grep("<[\\w]*>",test@schema,value=T)
grep("<\\w*>",test@schema,value=T)
grep("\\w*",test@schema,value=T)
grep("\\w*:",test@schema,value=T)
grep("\\w*:\\w*",test@schema,value=T)
grep("\\w*:\\w*>",test@schema,value=T)
grep(">\\w*:\\w*>",test@schema,value=T)
grep("<\\w*:\\w*>",test@schema,value=T)
grep("<(\\w*:\\w*)>",test@schema,value=T)
gsub("<\\w*:\\w*>",test@schema,value=T)
regexpr("<\\w*:\\w*>",test@schema,value=T)
regexpr("<\\w*:\\w*>",test@schema)
gregexpr("<\\w*:\\w*>",test@schema)
gregexpr("<\\w*:\\w*>",test@schema,value=T)
gregexpr("<\\w*:\\w*>",test@schema)
?gregexpr
gregexpr("<\\w*:\\w*>",test@schema,fixed = T)
gregexpr("<\\w*:\\w*>",test@schema)
grepl("<\\w*:\\w*>",test@schema)
regexec("<\\w*:\\w*>",test@schema)
regexpr("<\\w*:\\w*>",test@schema)
regmatches(test@schema,regexpr("<\\w*:\\w*>",test@schema))
regmatches(test@schema,regexpr("<(\\w*:\\w*)>",test@schema))
test@schema
regmatches(test@schema,regexpr("\\[(\\w*\\])>",test@schema))
regmatches(test@schema,regexpr("\\[(\\w*)\\]>",test@schema))
regmatches(test@schema,regexpr("\\\[(\\w*)\\\]>",test@schema))
regmatches(test@schema,regexpr("\[(\\w*)\]>",test@schema))
regmatches(test@schema,regexpr("/[(\\w*)/]>",test@schema))
regmatches(test@schema,regexpr("[\\w*]>",test@schema))
regmatches(test@schema,regexpr("\\[\\w*\\]",test@schema))
regmatches(test@schema,regexpr("[\\w*]",test@schema))
regmatches(test@schema,regexpr("[\\w]*",test@schema))
regmatches(test@schema,regexpr("[\\w]+",test@schema))
regmatches(test@schema,regexpr("[\\w]*",test@schema))
regmatches(test@schema,regexpr("\\[([\\w]*)\\]",test@schema))
regmatches(test@schema,regexpr("\\[([\\w]*)\\]",test@schema,perl=T))
regmatches(test@schema,regexpr("\\[([\\w]*)\\]",test@schema))
regexpr("\\[([\\w]*)\\]",test@schema)
regexpr("\\[[\\w]*\\]",test@schema)
regexpr("\\[\\]",test@schema)
regexpr("^\\[\\]$",test@schema)
regexpr("^\\[\\w*\\]$",test@schema)
regexpr("^\\[\\w+\\]$",test@schema)
test@schema
regexpr("^\\[[\\w:,=*]*\\]$",test@schema)
regexpr("\\[[\\w:,=*]*\\]",test@schema)
regexpr("\\[[\\w:,=*]*\\]",test@schema)
regexpr("\[[\\w:,=*]*\]",test@schema)
regexpr("\\[[\\w:,=*]*\\]",test@schema)
regexpr("/\[[\w:,=*]*\]/",test@schema)
regexpr("/\\[[\\w:,=*]*\\]/",test@schema)
regexpr("\\[[\\S]*\\]",test@schema)
regexpr("[\\S]*",test@schema)
test@schema
s=test@schema
strsplit(s,"<>")
strsplit(s,"<> ")
strsplit(s,"<(\\w*)> ")
strsplit(s,"<([\\w*])> ")
strsplit(s,"\\<\\>")
strsplit(s," ")
attr=strsplit(s," ")[[1]][1]
dims=strsplit(s," ")[[1]][2]
gsub(attr,"<>","")
gsub("<>",attr,"")
sub("<>",attr,"")
sub("<[\\w*:\\w*]>",attr,"")
grep("<[\\w*:\\w*]>",attr)
grep("<[\\w*:\\w*]>",attr,value=T)
sub("<[\\w*:\\w*]>","",attr)
sub("[<>]","",attr)
sub("<>","",attr)
sub("[<|>]","",attr)
gsub("[<|>]","",attr)
attr=gsub("[<|>]","",strsplit(s," ")[[1]][1])
dims=gsub("[\\[|\\]]","",strsplit(s," ")[[1]][2])
dims=gsub("[\\[|\\]]","",strsplit(s," ")[[1]][2])
dims=gsub("[\\[|\\]]","",strsplit(s," ")[[1]][2],perl=T)
strsplit(attr,",")
strsplit(dims,"[\\w*]=[\\w]*,")
strsplit(dims,",")
attr=strsplit(gsub("[<|>]","",strsplit(s," ")[[1]][1]),",")[[1]]
dims=strplit(gsub("[\\[|\\]]","",strsplit(s," ")[[1]][2],perl=T),",")[[1]]
dims=strsplit(gsub("[\\[|\\]]","",strsplit(s," ")[[1]][2],perl=T),",")[[1]]
dims=matrix(strsplit(gsub("[\\[|\\]]","",strsplit(s," ")[[1]][2],perl=T),",")[[1]],nrow=3)
dims
strsplit(dims[1,],"=:")
strsplit(dims[1,],"[=|:]")
k=strsplit(dims[1,],"[=|:]")
k[[c(1,2)]][2]
k[[1:2]][2]
k[[1]][2]
k[[1],[2]][2]
k[list(1,2)[2]
]
k[list(1,2)][2]
?rnames
?rows
?rownames
slotNames(test)
library(STRasterSciDB)
rm(test)
scidbconnect(host="gis-bigdata.uni-muenster.de",port=32321,user="f_lahn01",password="2v4rmvze65q9rwje8b2pcbzk",protocol="https")
test= stdb("test_chicago_sts")
rm(test)
scidbconnect(host="gis-bigdata.uni-muenster.de",port=32321,user="f_lahn01",password="2v4rmvze65q9rwje8b2pcbzk",protocol="https")
test= stdb("test_chicago_sts")
library(STRasterSciDB)
test@extent
plot(test)
plot(extnet(test)))
plot(extnet(test))
plot(extent(test))
library(scidb)
library(raster)
library(STRasterSciDB)
scidbconnect(host="gis-bigdata.uni-muenster.de",port=32321,user="f_lahn01",password="2v4rmvze65q9rwje8b2pcbzk",protocol="https")
devtools::install_github("Paradigm4/SciDBR", ref="laboratory")
?scidbconnect
warnings()
?scidbconnect
??scidbconnect
scidbconnect(host="giw-rambo.uni-muenster.de",port=35351,user="scidb",password = "fsjlc259xh3vdazs",auth_type = "digest",protocol = "https")
library(scidb)
detach("package:STRasterSciDB", unload=TRUE)
detach("package:raster", unload=TRUE)
detach("package:sp", unload=TRUE)
library("scidb", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
remove.packages("scidb")
devtools::install_github("Paradigm4/SciDBR", ref="laboratory")
library(scidb)
remove.packages("scidb")
devtools::install_github("Paradigm4/SciDBR")
library(scidb)
scidb::scidbconnect(host="giw-rambo.uni-muenster.de",port=35351,user="scidb",password = "fsjlc259xh3vdazs",auth_type = "digest",protocol = "https")
library(scidb)
scidbconnect(host="giw-rambo.uni-muenster.de",port=35351,user="scidb",password = "fsjlc259xh3vdazs",auth_type = "digest",protocol = "https")
scidblist()
scidblist()
scidblist()
scidblist()
a = scidb("test_chicago_sts")
a
sub = a[1:10,1:10,0:5] []
?subset
?subset.scidb
sub = a[1:10,1:10,0:5]
sub = subset(a,x < 10 & y < 10 & t < 5)
sub[]
sub = subset(a,x > 99 & x < 110 & y > 99 &y  < 110 & t < 5)
sub[]
rm(a,sub)
test= stdb("test_chicago_sts")
library("STRasterSciDB", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
test= stdb("test_chicago_sts")
library(STRasterSciDB)
test= stdb("test_chicago_sts")
scidbconnect(host="giw-rambo.uni-muenster.de",port=35351,user="scidb",password = "fsjlc259xh3vdazs",auth_type = "digest",protocol = "https")
test= stdb("test_chicago_sts")
library(raster)
test= stdb("test_chicago_sts")
test
test= scidb("test_chicago_sts")
str(test)
test@schema
slots(test)
slot(test)
slot("scidb")
slot("scidb-class")
slotNames(test)
test@meta
schema(test)
test@name
library(STRasterSciDB)
scidbconnect(host="giw-rambo.uni-muenster.de",port=35351,user="scidb",password = "fsjlc259xh3vdazs",auth_type = "digest",protocol = "https")
test= stdb("test_chicago_sts")
lsfile = "/home/lahn/Dokumente/Landsat/LE72300622001088-SC20160104033252.tif"
source('~/GitHub/STRasterSciDB/R/testing.R', echo=TRUE)
schema(test)
str(test)
test
slotNames(test)
test@extent
test@rotated
.Rotation
raster:::.__C__.Rotation
raster:::MultipleRasterData
raster:::.__C__.MultipleRasterData
s@data
s[1]
s[1,]
?`subset,RasterStack-method`
s
s@data
spplot(subset(s,1))
s@data
s@data@values
?crop
s = brick(lsfile,values=TRUE)
s@data
?brick
s = stack(lsfile)
b = brick(s)
b = brick(s)
b@data
b = brick(s,values=TRUE)
options()
nlayers(test)
rotated(test)
brick(test)
schema(test)
scidbls()
test2 = stdb("MOD13A3")
test2
extent(test2)
test2@affine
test2@affine %*% c(1,0,0)
library(STRasterSciDB)
rm(b,lsfile,s,test,test2)
scidbconnect(host="giw-rambo.uni-muenster.de",port=35351,user="scidb",password = "fsjlc259xh3vdazs",auth_type = "digest",protocol = "https")
test= stdb("test_chicago_sts")
extent(test)
test2 = stdb("MOD13A3")
extent(test)
extent(test2)
CRS(test2)
CRS(test)
crs(test)
crs(test2)
?extract
?canProcessInMemory
canProcessInMemory(test,4)
?getValues
inMemory(test)
nlayers(test)
slotNames(test)
slotNames(test@data)
schema(test)
sc="<band1:uint8,band2:uint8,band3:unit8> [y=0:978,4096,0,x=0:748,4096,0,t=0:*,1,0]"
attr = strsplit(gsub("[<|>]","",strsplit(sc," ")[[1]][1]),",")[[1]]
sapply(attr,strsplit(":"))
?strsplit
sapply(attr,strsplit,split=":")
as.matrix(sapply(attr,strsplit,split=":"))
as.matrix(lapply(attr,strsplit,split=":"))
sapply(attr,strsplit,split=":")
unlist(sapply(attr,strsplit,split=":"))
matrix(unlist(sapply(attr,strsplit,split=":")),3,2)
matrix(unlist(sapply(attr,strsplit,split=":")),3,2,byrow=TRUE)
rm(attr,sc,test,test2)
scidbconnect(host="giw-rambo.uni-muenster.de",port=35351,user="scidb",password = "fsjlc259xh3vdazs",auth_type = "digest",protocol = "https")
test= stdb("test_chicago_sts")
nlayers(test)
length(rep(1,4))
names(test)
labels(test)
?names
hasValues(test)
missing(test)
rm(test)
scidbconnect(host="giw-rambo.uni-muenster.de",port=35351,user="scidb",password = "fsjlc259xh3vdazs",auth_type = "digest",protocol = "https")
test= stdb("test_chicago_sts")
names(test)
rm(test)
library(STRasterSciDB)
scidbconnect(host="giw-rambo.uni-muenster.de",port=35351,user="scidb",password = "fsjlc259xh3vdazs",auth_type = "digest",protocol = "https")
test= stdb("test_chicago_sts")
names(test)
nlayerss(test)
nlayers(test)
?readAll
nrows(test)
nrow(test)
ncol(test)
?getRasterData
library(rgdal)
?getRasterData
rnorm()
rnorm(100)
rnorm(100)?rnorm
?rnorm
runif(100,0,255)
sample(0:255,10,replace=T)
library(STRasterSciDB)
rm(test)
scidbconnect(host="giw-rambo.uni-muenster.de",port=35351,user="scidb",password = "fsjlc259xh3vdazs",auth_type = "digest",protocol = "https")
test= stdb("test_chicago_sts")
getValues(test)
fromDisk(test)
fromDisk
slotNames(test@data)
library(STRasterSciDB)
rm(test)
scidbconnect(host="giw-rambo.uni-muenster.de",port=35351,user="scidb",password = "fsjlc259xh3vdazs",auth_type = "digest",protocol = "https")
test= stdb("test_chicago_sts")
rm(test)
test= stdb("test_chicago_sts")
getValues(test)
library(STRasterSciDB)
rm(test)
scidbconnect(host="giw-rambo.uni-muenster.de",port=35351,user="scidb",password = "fsjlc259xh3vdazs",auth_type = "digest",protocol = "https")
test= stdb("test_chicago_sts")
getValues(test)
spplot(test)
